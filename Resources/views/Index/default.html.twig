{% extends bap.layout %}
{% oro_title_set({params : {"%name%": dashboard.getLabel()|trans }}) %}

{% block content %}
<div class="layout-content dashboard-contailer">
    <div class="container-fluid page-title">
        <div class="navigation clearfix navbar-extra navbar-extra-right">
            <div class="row">
                {% block title %}
                <div class="pull-left pull-left-extra">
                    <div class="pull-left">
                        <h1 class="oro-subtitle">{{ dashboard.getLabel()|trans }}</h1>
                    </div>
                </div>
                {% endblock title %}
                {% block titleNavButtons %}
                <div class="pull-right title-buttons-container">
                    {% placeholder dashboard_navButtons_before %}
                    {% block navButtons %}
                        {% if dashboards|length > 1 %}
                        <div class="dashboard-selector-container pull-left">
                            <label for="dashboard_selector">{{ 'Dashboards'|trans }}:</label>
                            <select id="dashboard_selector">
                                {% for dashboardModel in dashboards %}
                                    <option value="{{ dashboardModel.dashboard.id }}"{% if dashboardModel.dashboard.id == dashboard.dashboard.id %} selected="selected"{% endif %}>
                                        {{ dashboardModel.getLabel()|trans }}
                                    </option>
                                {% endfor %}
                            </select>
                        </div>
                        <a href="javascript:void(0);" class="dashboard-widgets-add btn main-group pull-left">
                            <i class="icon-plus"></i>
                            Add widget
                        </a>
                        <script type="text/javascript">
                            require(['jquery', 'routing', 'oronavigation/js/navigation'],
                            function($, routing, Navigation){
                                $(function () {
                                    $('#dashboard_selector').on('change', function (e) {
                                        var url = routing.generate('oro_dashboard_index', {id: $(e.currentTarget).val()}) + '?change_dashboard=true',
                                            navigation = Navigation.getInstance();
                                        if (navigation) {
                                            navigation.processRedirect({
                                                fullRedirect: false,
                                                location: url
                                            });
                                        } else {
                                            location.href = url;
                                        }
                                    });
                                });
                            });
                        </script>
                        {% endif %}
                    {% endblock navButtons %}
                    {% placeholder dashboard_navButtons_after %}
                </div>
                {% endblock titleNavButtons %}
            </div>
        </div>
    </div>
    {% block widgets_content %}
        {% set contentClass = contentClass|default('dashboard-container') %}
        <div class="scrollable-container">
            <div class="responsive-section {{ contentClass }}">
                <div class="clearfix">
                {% block widgets %}
                    {{
                        _self.renderWidgetsColumn({
                            'widgets': dashboard.getOrderedColumnWidgets(1, false, true),
                            'columnIndex': 1,
                            'columnElementId': 'dashboard-column-1',
                            'columnClass': 'dashboard-column',
                            'widgetIdPrefix': 'dashboard-widget-'
                        })
                    }}
                    {{
                        _self.renderWidgetsColumn({
                            'widgets': dashboard.getOrderedColumnWidgets(2, true, false),
                            'columnIndex': 2,
                            'columnElementId': 'dashboard-column-2',
                            'columnClass': 'dashboard-column',
                            'widgetIdPrefix': 'dashboard-widget-'
                        })
                    }}
                {% endblock widgets %}
                </div>
            </div>
        </div>
        <script type="text/html" id="available-dashboard-widgets">
            {% for widget in widgets %}
                <div class="dashboard-widget-container">
                    <div class="dashboard-widget-thumbnail">
                    {% if widget.config.thumbnail is defined %}
                        <img src="{{ widget.config.thumbnail }}" alt="Preview" />
                    {% else %}
                        <div></div>
                    {% endif %}
                    </div>
                    <p>
                    {% if widget.config.label is defined %}
                        <strong class="dashboard-widget-title">{{ widget.config.label|trans }}</strong>
                    {% endif %}
                    {% if widget.config.description is defined %}
                        <span class="dashboard-widget-description">{{ widget.config.description }}</span>
                        {% else %}
                        <span class="dashboard-widget-description">
                            Lorem ipsum dolor sit amet, fugit movet fastidii ut vim, vel at etiam libris audire,
                            atqui everti quaestio mel cu. Id sit veri nonumy disputando, pri cu tota prima
                            cotidieque. Mea utamur periculis id, ocurreret euripidis in cum, sed alterum platonem
                            ut. Pri latine recusabo ad, an ius virtute ponderum.
                        </span>
                    {% endif %}
                    </p>
                    <div class="dashboard-widgets-pick-wrapper">
                        <a class="btn main-group add-widget-button">
                            {{ "oro.dashboard.add_dashboard_widgets.add_to_dashboard"|trans }}
                        </a>
                    </div>
                </div>
            {% endfor %}
        </script>
    {% endblock widgets_content %}

    <script type="text/javascript">
        require(['orodashboard/js/dashboard-container', 'orodashboard/js/widget-picker'],
            function(dashboardContainer, widgetPicker) {
                {% set widgetIds = [] %}
                {% for widget in dashboard.widgets %}
                {% set widgetIds = widgetIds|merge(['dashboard-widget-' ~ widget.widget.id]) %}
                {% endfor %}
                dashboardContainer.initialize({
                    widgetIds: {{ widgetIds|json_encode|raw }},
                    columnsSelector: '.dashboard-column'
                });
				widgetPicker.init();
            }
        );
    </script>
</div>
{% endblock content %}

{% macro renderWidgetsColumn(options) %}
    <div id="{{ options.columnElementId }}" class="responsive-cell dashboard-column" data-column="{{ options.columnIndex }}">
        {% for widget in options.widgets %}
            {{
                oro_widget_render({
                    'widgetType': 'dashboard-item',
                    'wid': options.widgetIdPrefix ~ widget.widget.id,
                    'url': path(widget.config.route, widget.config.route_parameters),
                    'state': {
                        'layoutPosition': widget.widget.layoutPosition,
                        'expanded': widget.widget.expanded
                    }
                })
            }}
        {% endfor %}
    </div>
{% endmacro %}

